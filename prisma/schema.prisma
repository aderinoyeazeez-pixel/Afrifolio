generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  reviews   Review[]
}

model Brand {
  id          String      @id @default(cuid())
  name        String
  slug        String       @unique
  tagline     String?
  story       String?
  country     String?
  city        String?
  status      BrandStatus  @default(PENDING)
  featured    Boolean      @default(false)
  heroImage   String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  products    Product[]
  collections Collection[]
  reviews     Review[]
}

model Product {
  id          String     @id @default(cuid())
  brandId     String
  brand       Brand      @relation(fields: [brandId], references: [id])
  name        String
  slug        String     @unique
  description String?
  price       Int        // price in minor units e.g. kobo
  images      String[]
  sizes       String[]   // e.g. ["S","M","L"]
  colours     String[]   // e.g. ["Black","Indigo"]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Collection {
  id        String   @id @default(cuid())
  brandId   String
  brand     Brand    @relation(fields: [brandId], references: [id])
  name      String
  slug      String   @unique
  products  Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id        String   @id @default(cuid())
  brandId   String?
  brand     Brand?   @relation(fields: [brandId], references: [id])
  userId    String?
  user      User?    @relation(fields: [userId], references: [id])
  rating    Int
  comment   String?
  createdAt DateTime @default(now())
}

enum BrandStatus {
  PENDING
  APPROVED
  REJECTED
}
